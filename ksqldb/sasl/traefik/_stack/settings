#!/usr/bin/env bash

# START CONFIGURATION
DOLLAR='$'
export VCW_STACK_GLOBAL_STACKS="\
vcwc/confluent/ksqldb/sasl,\
vcwc/nginx/rewrite"
export VCW_STACK_GLOBAL_STACKNAMES_PREVIOUS="\
vcw_stack_ksqldb,\
vcw_stack_url_rewrite"
export VCW_STACK_GLOBAL_STACKNAMES="\
vcw_stack_ksqldb,\
vcw_stack_ksqldb_rest"
export VCW_STACK_GLOBAL_BOOTSTACKS="vcw_stack_ksqldb_server"
export VCW_STACK_GLOBAL_RUNSTACKS="vcw_stack_ksqldb_server_rest_ksql_server"
export VCW_STACK_GLOBAL_VOLUME_LIST="\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_nginx_config_volume,\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_ksql_server_queries_volume"
export VCW_STACK_GLOBAL_VOLUME_INITIALISED="\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_nginx_config_volume:/vcw/pwd"
# END CONFIGURATION

# START GLOBAL SETTINGS
export VCW_STACK_GLOBAL='\
$VCW_STACK_KSQLDB_ENVIRONMENT_CONF_PATH,\
$VCW_STACK_KSQLDB_ENVIRONMENT_CONF_UPSTREAM,\
$VCW_STACK_KSQLDB_COMPOSE_EXTENSIONS,\
$VCW_STACK_KSQLDB_MODULE_KAFKA_CONNECT_PORT,\
$VCW_STACK_KSQLDB_PORTS,\
$VCW_STACK_GLOBAL_VOLUMES,\
$VCW_STACK_GLOBAL_NETWORKS'
export VCW_STACK_KSQLDB_ENVIRONMENT_CONF_PATH="/${DOLLAR}{VCW_STACK_GLOBAL_URLPREFIX}/rest"
export VCW_STACK_KSQLDB_ENVIRONMENT_CONF_UPSTREAM="${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_ksql_server:8088"
export VCW_STACK_KSQLDB_COMPOSE_EXTENSIONS="
      labels: [traefik.enable=true,traefik.docker.network=${DOLLAR}{VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay,\
      traefik.http.services.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_nginx.loadbalancer.server.port=80,\
      traefik.http.routers.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_nginx.entrypoints=conteco,\
      traefik.http.routers.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_nginx.rule=PathPrefix(\"/${DOLLAR}{VCW_STACK_GLOBAL_URLPREFIX}/rest\")]
${DOLLAR}{VCW_STACK_KSQLDB_COMPOSE_EXTENSIONS}"
export VCW_STACK_KSQLDB_MODULE_KSQLDB_PORT=
export VCW_STACK_KSQLDB_PORTS=
# END GLOBAL SETTINGS

# START SETTINGS ksql_server.base
export VCW_STACK_KSQLDB_KSQL_KSQL_SERVICE_ID="${VCW_STACK_GLOBAL_STACKPREFIX}"
export VCW_STACK_KSQLDB_MODE=",'KSQL_LISTENERS=http://0.0.0.0:8088','KSQL_KSQL_SCHEMA_REGISTRY_URL=http://schema_registry:8081'"
export VCW_STACK_KSQLDB_CONSOLE=",'KSQL_LISTENERS=http://0.0.0.0:8088','KSQL_KSQL_SCHEMA_REGISTRY_URL=http://schema_registry:8081'"
export VCW_STACK_KSQLDB_HEADLESS=",'KSQL_KSQL_QUERIES_FILE=','KSQL_KSQL_SCHEMA_REGISTRY_URL=http://schema_registry:8081'"
#export VCW_STACK_KSQLDB_ENVIRONMENT_CLOUD_BOOTSTRAP_SERVERS=
#export VCW_STACK_KSQLDB_ENVIRONMENT_SASL_JAAS_CONFIG_CLUSTER_API_KEY=
#export VCW_STACK_KSQLDB_ENVIRONMENT_SASL_JAAS_CONFIG_CLUSTER_API_SECRET=
#export VCW_STACK_KSQLDB_ENVIRONMENT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG_CLUSTER_API_KEY=
#export VCW_STACK_KSQLDB_ENVIRONMENT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG_CLUSTER_API_SECRET=
#export VCW_STACK_KSQLDB_ENVIRONMENT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG_CLUSTER_API_KEY=
#export VCW_STACK_KSQLDB_ENVIRONMENT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG_CLUSTER_API_SECRET=
#export VCW_STACK_KSQLDB_ENVIRONMENT_SCHEMA_REGISTRY_URL=
#export VCW_STACK_KSQLDB_ENVIRONMENT_SCHEMA_REGISTRY_API_KEY=
#export VCW_STACK_KSQLDB_ENVIRONMENT_SCHEMA_REGISTRY_API_SECRET=

export VCW_STACK_KSQLDB_PORTS="8088:8088"
export VCW_STACK_KSQLDB_DEPLOY_RESOURCES_LIMITS_MEMORY="1536m"
export VCW_STACK_KSQLDB_DEPLOY_RESOURCES_RESERVATIONS_MEMORY="1024m"
# END SETTINGS ksql_server.base
# START SETTINGS nginx.base
export VCW_STACK_KSQLDB_DEPLOY_RESOURCES_LIMITS_MEMORY="64m"
export VCW_STACK_KSQLDB_DEPLOY_RESOURCES_RESERVATIONS_MEMORY="16m"
# END SETTINGS nginx.base

# START TOPLEVEL SETTINGS
# END TOPLEVEL SETTINGS
